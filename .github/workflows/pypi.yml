name: Publish to PyPI

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

# Ensure only one release workflow runs at a time
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Verify tag matches version
      run: |
        # Extract version from the tag
        TAG_VERSION=${GITHUB_REF#refs/tags/v}
        # Get version from setup.py
        PACKAGE_VERSION=$(python setup.py --version)
        
        if [ "$TAG_VERSION" != "$PACKAGE_VERSION" ]; then
          echo "Error: Tag version ($TAG_VERSION) does not match package version ($PACKAGE_VERSION)"
          exit 1
        fi
    
    - name: Build package
      run: python -m build
    
    - name: Check distribution
      run: |
        python -m twine check dist/*
        
    - name: Test built package
      run: |
        pip install dist/*.whl
        python -c "import ConsoleM; print(ConsoleM.__version__)"
    
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python -m twine upload --skip-existing dist/* 